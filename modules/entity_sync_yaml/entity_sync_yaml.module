<?php


function entity_sync_yaml_menu() {
  $items = array();
  $items['entity_sync/%/%'] = array(
    'title' => 'Entity Export',
    'page callback' => 'entity_sync_yaml_export',
    'page arguments' => array(1,2),
    'access callback' => 'entity_sync_yaml_access',
    'access arguments' => array(1,2),
    'description' => 'get entity as yaml.',
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}

function entity_sync_yaml_access($entity_type, $uuid) {
  return entity_access("view", $entity_type, entity_sync_load_entity_by_uuid($uuid));
}

// example UUID: a3181cdc-6b5c-3854-6daa-b02b78218036

function entity_sync_yaml_export($entity_type, $uuid) {
  require_once(libraries_get_path('symfony_yaml')."/Yaml.php");
  $entity = (array)entity_sync_load_entity_by_uuid($entity_type, $uuid);
  echo Symfony\Component\Yaml\Yaml::dump($entity, 2); 
  exit();
}

function entity_sync_load_entity_by_uuid($entity_type, $uuid) {
  $info = entity_get_info($entity_type);
  $q = db_query("select :id_name as id from :table where uuid=:uuid", 
    array(
      ":uuid" => $uuid, 
      ":id_name" => $info['entity keys']['id'], 
      ":table" => $info['base table']
      )
    )->fetchObject();
  
  if (is_object($q) && !empty($q)) {
    $entity = entity_load($entity_type, array($q->id));
    return reset($entity);
  } else {
    return array();
  }
  
}