<?php
  
function entity_sync_deployment_schema() {
  
  $schema['entity_sync_deployment'] = array(
    'description' => 'Stores information about local entities to be able to pull entity data from remote source.',
    'fields' => array(
      'did' => array(
        'description' => 'The autoincrement primary key SSH key ID.',
        'type' => 'serial',
        'unsigned' => FALSE,
        'not null' => TRUE,
      ),
      'vid' => array(
        'description' => 'The current {key_revision}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'title' => array(
        'description' => 'The nickname of the key file.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''
      ),
      'created' => array(
        'description' => 'The time that the key was created, as a UNIX timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that owns this node; initially, this is the user that created it. As revsions are made, last user who revised entity.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Is the key enabled or revoked?',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'did' => array('did', 'vid'),
    ),
    'foreign keys' => array(
      'deployment_revision' => array(
        'table' => 'entity_sync_deployment_revision',
        'columns' => array('vid' => 'vid'),
      ),
      'deployment_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  
  $schema['entity_sync_deployment_revision'] = array(
    'description' => 'Reveision information for remote entity pull.',
    'fields' => array(
      'did' => array(
        'description' => 'The id this revision belongs to',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'vid' => array(
        'description' => 'The primary identifier for this version.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'keeps track of the user that created the revsion.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the revision was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Is the key enabled or revoked?',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'title' => array(
        'description' => 'The nickname of the key file.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'did' => array('did', 'vid'),
    ),
    'foreign keys' => array(
      'versioned_deployment' => array(
        'table' => 'entity_sync_deployment',
        'columns' => array('did' => 'did'),
      ),
      'version_author' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );

  return $schema;
}

function entity_sync_deployment_add_deployment_items_field_and_instance() {
  xdebug_break();
   if(!field_info_field('field_deployment_items')){
     $field = array(
         'field_name' => 'field_deployment_items',
         'type' => 'entityreference',
         'cardinality' => FIELD_CARDINALITY_UNLIMITED,
         'translatable' => '0',
       );
       field_create_field($field);
   }
   $fields = field_info_instances("entity_sync_deployment");
   xdebug_break();
  if (!array_key_exists("field_deployment_items", $fields)) {
    $instance = array(
      'field_name' => 'field_deployment_items',
      'entity_type' => "entity_sync_deployment",
      'bundle' => "entity_sync_deployment_type",
      'label' => 'Deployment Items',
      'description' => "Entities associated with this deployment",
      'widget' => array(
        'type' => 'entityreference_autocomplete',
      ),
    );
    field_create_instance($instance);
  }
  xdebug_break();
}


function entity_sync_deployment_enable() {
  
  entity_sync_deployment_add_deployment_items_field_and_instance();
  
}

function entity_sync_deployment_disable() {
  
  
  
}

